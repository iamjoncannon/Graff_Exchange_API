"""

two different sets of types:

* types for the total profile section

    - login for mobile requests entire section
    - login for web only requests user data
    - after login, web calls hydrate_portfolio and receives the Portfolio

* types for the individual stock section

    - mobile calls all_individual_stock_data- populates whole section
    - web calls individual thunks for each section
        - individual_news_data

"""

type Query {

    login(email: String, password: String): User_Profile
    # hydrate_portfolio(_: Boolean): Portfolio 
    all_individual_stock_data(symbol: String): Individual_Stock_Data  # mobile
    # individual_news_data(symbol: String): [ News_Story ] # web 
}

type Mutation {

    sign_up(input : sign_up_input ): User_Profile
    # make_trade
}



# types for total profile page

input sign_up_input {

    password: String 
    first_name: String 
    last_name: String 
    email: String 
}

type User_Profile {

    first_name: String 
    last_name: String 
    email: String 
    token: String
    balance: Float   
    holdings: [ Holding ] # only for mobile
    transaction_history: [ Transaction ] # only for mobile
}

type Portfolio {
    holdings: [ Holding ] 
    transaction_history: [ Transaction ] 
}

type Holding {

    user_data: Holding_User_Data
    ohlc_data: Holding_OHLC_Data
}

type Holding_User_Data {

    id: ID!
    symbol: String 
    current_holding: Float 
}

type Holding_OHLC_Data {

    symbol: String 
    companyName: String 
    primaryExchange: String 
    calculationPrice: String 
    open: Float 
    close: Float,
    high: Float,
    low: Float,
    latestPrice: Float,
    latestSource: String,
    latestVolume: Int,
    iexRealtimePrice: Float,
    previousClose: Float,
    change: Float,
    changePercent: Float,
    volume: Float,
    marketCap: Int,
    peRatio: Float,
    week52High: Float,
    week52Low: Float,
    ytdChange: Float,
}

type Transaction {

    id: ID!
    type: String  
    symbol: String 
    quantity: Int 
    price: Float 
    date_conducted: String 
}


# objects for individual
# stock page 

type Individual_Stock_Data {
    news: [ News_Story ]
}

type News_Story {

    title: String 
    date: String 
    text: String 
    image_url: String 
    news_url: String 
}



